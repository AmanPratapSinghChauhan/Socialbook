{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nexport const userReducer = createReducer({}, {\n  loginRequest: state => {\n    state.loading = true;\n  },\n  loginSuccess: (state, action) => {\n    state.loading = false;\n    state.isAuthenticated = true;\n    state.isVarified = true;\n    state.user = action.payload.user;\n    state.message = action.payload.msg;\n  },\n  loginFail: (state, action) => {\n    state.loading = false;\n    state.isAuthenticated = false;\n    state.isVarified = false;\n    state.error = action.payload;\n  },\n  registerRequest: state => {\n    state.loading = true;\n  },\n  registerSuccess: (state, action) => {\n    state.loading = false;\n    state.isAuthenticated = true;\n    state.isVarified = false;\n    state.user = action.payload.user;\n    state.message = action.payload.msg;\n  },\n  registerFail: (state, action) => {\n    state.loading = false;\n    state.isVarified = false;\n    state.isAuthenticated = false;\n    state.error = action.payload;\n  },\n  verificationRequest: state => {\n    state.loading = true;\n  },\n  verificationSuccess: (state, action) => {\n    state.loading = false;\n    state.isVarified = true;\n    state.user = action.payload.user;\n    state.message = action.payload.msg;\n  },\n  verificationFailure: (state, action) => {\n    state.loading = false;\n    state.isVarified = false;\n    state.error = action.payload;\n  },\n  loadUserRequest: state => {\n    state.loading = true;\n  },\n  loadUserSuccess: (state, action) => {\n    state.loading = false;\n    state.isAuthenticated = true;\n    state.isVarified = true;\n    state.user = action.payload.user;\n    state.post = action.payload.post;\n  },\n  loadUserFail: (state, action) => {\n    state.loading = false;\n    state.isAuthenticated = false;\n    state.isVarified = false;\n    state.error = action.payload;\n  },\n  logoutRequest: state => {\n    state.loading = true;\n  },\n  logoutSuccess: (state, action) => {\n    state.loading = false;\n    state.isVarified = false;\n    state.isAuthenticated = false;\n    state.user = null;\n    state.message = action.payload;\n  },\n  logoutFail: (state, action) => {\n    state.loading = false;\n    state.isVarified = true;\n    state.isAuthenticated = true;\n    state.error = action.payload;\n  },\n  forgetPasswordRequest: state => {\n    state.loading = true;\n  },\n  forgetPasswordSuccess: (state, action) => {\n    state.loading = false;\n    state.message = action.payload;\n  },\n  forgetPasswordFail: (state, action) => {\n    state.loading = false;\n    state.error = action.payload;\n  },\n  resetPasswordRequest: state => {\n    state.loading = true;\n  },\n  resetPasswordSuccess: (state, action) => {\n    state.loading = false;\n    state.message = action.payload;\n  },\n  resetPasswordFail: (state, action) => {\n    state.loading = false;\n    state.error = action.payload;\n  },\n  postCreateRequest: state => {\n    state.loading = true;\n  },\n  postCreateSuccess: (state, action) => {\n    state.loading = false;\n    state.user = action.payload.user;\n    state.message = action.payload.msg;\n  },\n  postCreateFail: (state, action) => {\n    state.loading = false;\n    state.message = action.payload;\n  },\n  clearError: state => {\n    state.error = null;\n  },\n  clearMessage: state => {\n    state.message = null;\n  }\n});","map":{"version":3,"names":["createReducer","userReducer","loginRequest","state","loading","loginSuccess","action","isAuthenticated","isVarified","user","payload","message","msg","loginFail","error","registerRequest","registerSuccess","registerFail","verificationRequest","verificationSuccess","verificationFailure","loadUserRequest","loadUserSuccess","post","loadUserFail","logoutRequest","logoutSuccess","logoutFail","forgetPasswordRequest","forgetPasswordSuccess","forgetPasswordFail","resetPasswordRequest","resetPasswordSuccess","resetPasswordFail","postCreateRequest","postCreateSuccess","postCreateFail","clearError","clearMessage"],"sources":["C:/Users/91863/OneDrive/Desktop/Socialbook/my-app/src/reducers/UserReducer.js"],"sourcesContent":["  import {createReducer} from '@reduxjs/toolkit';\r\nexport const userReducer=createReducer(\r\n    {},\r\n    {\r\n    loginRequest: state => {\r\n        state.loading = true;\r\n      },\r\n      loginSuccess: (state, action) => {\r\n        state.loading = false;\r\n        state.isAuthenticated = true;\r\n        state.isVarified = true;\r\n        state.user = action.payload.user;\r\n        state.message = action.payload.msg;\r\n      },\r\n      loginFail: (state, action) => {\r\n        state.loading = false;\r\n        state.isAuthenticated = false;\r\n        state.isVarified = false;\r\n        state.error = action.payload;\r\n      },\r\n  \r\n      registerRequest: state => {\r\n        state.loading = true;\r\n      },\r\n      registerSuccess: (state, action) => {\r\n        state.loading = false;\r\n        state.isAuthenticated = true;\r\n        state.isVarified = false;\r\n        state.user = action.payload.user;\r\n        state.message = action.payload.msg;\r\n      },\r\n      registerFail: (state, action) => {\r\n        state.loading = false;\r\n        state.isVarified = false;\r\n        state.isAuthenticated = false;\r\n        state.error = action.payload;\r\n      },\r\n      verificationRequest: (state)=>{\r\n        state.loading=true;\r\n      },\r\n      verificationSuccess: (state,action) =>{\r\n        state.loading=false;\r\n        state.isVarified=true;\r\n        state.user=action.payload.user;\r\n        state.message=action.payload.msg;\r\n\r\n      },\r\n      verificationFailure:(state,action )=>{\r\n        state.loading=false;\r\n        state.isVarified=false;\r\n        state.error=action.payload;\r\n      },\r\n      loadUserRequest: state => {\r\n        state.loading = true;\r\n      },\r\n      loadUserSuccess: (state, action) => {\r\n        state.loading = false;\r\n        state.isAuthenticated = true;\r\n        state.isVarified = true;\r\n        state.user = action.payload.user;\r\n        state.post=action.payload.post;\r\n      },\r\n      loadUserFail: (state, action) => {\r\n        state.loading = false;\r\n        state.isAuthenticated = false;\r\n        state.isVarified = false;\r\n        state.error = action.payload;\r\n      },\r\n  \r\n      logoutRequest: state => {\r\n        state.loading = true;\r\n      },\r\n      logoutSuccess: (state, action) => {\r\n        state.loading = false;\r\n        state.isVarified = false;\r\n        state.isAuthenticated = false;\r\n        state.user = null;\r\n        state.message = action.payload;\r\n      },\r\n      logoutFail: (state, action) => {\r\n        state.loading = false;\r\n        state.isVarified = true;\r\n        state.isAuthenticated = true;\r\n        state.error = action.payload;\r\n      },\r\n      forgetPasswordRequest: state => {\r\n        state.loading = true;\r\n      },\r\n      forgetPasswordSuccess: (state, action) => {\r\n        state.loading = false;\r\n        state.message = action.payload;\r\n      },\r\n      forgetPasswordFail: (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      },\r\n  \r\n      resetPasswordRequest: state => {\r\n        state.loading = true;\r\n      },\r\n      resetPasswordSuccess: (state, action) => {\r\n        state.loading = false;\r\n        state.message = action.payload;\r\n      },\r\n      resetPasswordFail: (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      },\r\n      postCreateRequest: state =>{\r\n        state.loading=true;\r\n      },\r\n      postCreateSuccess: (state,action)=>{\r\n        state.loading=false;\r\n        state.user=action.payload.user;\r\n        state.message=action.payload.msg;\r\n      },\r\n      postCreateFail: (state,action)=>{\r\n        state.loading=false;\r\n        state.message=action.payload;\r\n      },\r\n      clearError: state =>{\r\n        state.error=null;\r\n      },\r\n      clearMessage: state =>{\r\n        state.message=null;\r\n      }\r\n    }\r\n)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}