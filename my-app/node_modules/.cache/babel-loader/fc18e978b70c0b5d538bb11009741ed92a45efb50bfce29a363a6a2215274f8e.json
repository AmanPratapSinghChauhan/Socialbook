{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91863\\\\OneDrive\\\\Desktop\\\\Socialbook\\\\my-app\\\\src\\\\Components\\\\UserChats\\\\Userchat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Userchat.css';\nimport axios from 'axios';\nimport { server } from '../../store';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar socket;\nconst Userchat = props => {\n  _s();\n  const ENDPOINT = 'http://localhost:4000';\n  const [message, setMessage] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [chats, setChats] = useState();\n  const [sender, setSender] = useState();\n  const [reciever, setReciever] = useState();\n  const [socketConnected, setSocketConnected] = useState();\n  const [typing, setTyping] = useState(false);\n  const chatId = props.chatId;\n  const userAccessToken = localStorage.getItem('userAccessToken');\n  const finItem = JSON.parse(userAccessToken);\n  const handleGetMessages = async chatID => {\n    try {\n      const {\n        data\n      } = await axios.post(`${server}/getmessage`, {\n        chatID\n      });\n      if (data.success) {\n        setMessage(data.messages);\n        socket.emit(\"join chat\", chatID);\n      } else {}\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const sendMessage = async event => {\n    if (newMessage && chats) {\n      const chatID = chats._id;\n      socket.emit(\"stop typing\", chatID);\n      try {\n        setNewMessage(\"\");\n        const {\n          data\n        } = await axios.post(`${server}/sendmessage`, {\n          content: newMessage,\n          chatID,\n          finItem\n        });\n        socket.emit(\"new message\", data.message);\n        setMessage([...message, data.message]);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", props.userId);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setTyping(true));\n    socket.on(\"stop typing\", () => setTyping(false));\n\n    // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    socket.on(\"message recieved\", newMessageRecieved => {\n      if (chats) {\n        const chatID = chats._id;\n        if (chatID != newMessageRecieved.chat._id) {\n          if (!newMessageRecieved) {}\n        } else {\n          setMessage([...message, newMessageRecieved]);\n        }\n      }\n    });\n  }, [message]);\n  useEffect(async () => {\n    try {\n      const {\n        data\n      } = await axios.post(`${server}/getchat`, {\n        chatId,\n        finItem\n      });\n      if (data.success) {\n        setChats(data.FullChat);\n        setSender(data.sender);\n        setReciever(data.reciever);\n        const chatID = data.FullChat._id;\n        handleGetMessages(chatID);\n      } else {}\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  const typingHandler = e => {\n    setNewMessage(e.target.value);\n    if (!socketConnected) return;\n    if (!typing) {\n      console.log('typing');\n      setTyping(true);\n      socket.emit(\"typing\", chatId);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", chatId);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n  const handlePrevMessage = m => {\n    if (m) {\n      const datetime = m.createdAt.split(\"T\");\n      const date = datetime[0].split(\"-\");\n      const time = datetime[1].split(\":\");\n      var hour = (Number(time[0]) + 5) % 12;\n      if (Number(time[1]) >= 30) {\n        hour = hour + 1;\n      }\n      const minute = (Number(time[1]) + 30) % 60;\n      var timeString = '';\n      if (time[0] > 12) {\n        timeString = String(hour) + \":\";\n        if (minute < 10) {\n          timeString = timeString + \"0\" + String(minute) + \" pm\";\n        } else {\n          timeString = timeString + String(minute) + \" pm\";\n        }\n      } else {\n        timeString = String(hour) + \":\";\n        if (minute < 10) {\n          timeString = timeString + \"0\" + String(minute) + \" am\";\n        } else {\n          timeString = timeString + String(minute) + \" am\";\n        }\n      }\n      const t = String([time[1]]);\n      console.log(typeof t);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [m.sender, \"and\", props.userId, \"and\", m.content, \"and \", timeString]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !sender ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatting-body\",\n      children: [sender.name, \"and \", reciever.name, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-p-message\",\n        children: message.map(handlePrevMessage)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: typingHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n_s(Userchat, \"Z2xpz/18VfT9oANuLaoujdhRcYM=\");\n_c = Userchat;\nexport default Userchat;\nvar _c;\n$RefreshReg$(_c, \"Userchat\");","map":{"version":3,"names":["React","useEffect","useState","axios","server","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","Userchat","props","_s","ENDPOINT","message","setMessage","newMessage","setNewMessage","chats","setChats","sender","setSender","reciever","setReciever","socketConnected","setSocketConnected","typing","setTyping","chatId","userAccessToken","localStorage","getItem","finItem","JSON","parse","handleGetMessages","chatID","data","post","success","messages","emit","error","console","log","sendMessage","event","_id","content","userId","on","newMessageRecieved","chat","FullChat","typingHandler","e","target","value","lastTypingTime","Date","getTime","timerLength","setTimeout","timeNow","timeDiff","handlePrevMessage","m","datetime","createdAt","split","date","time","hour","Number","minute","timeString","String","t","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","map","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/91863/OneDrive/Desktop/Socialbook/my-app/src/Components/UserChats/Userchat.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Userchat.css';\r\nimport axios from 'axios';\r\nimport { server } from '../../store';\r\nimport io from 'socket.io-client';\r\n\r\nvar socket;\r\n\r\nconst Userchat = (props) => {\r\n\r\n  \r\n  const ENDPOINT='http://localhost:4000';\r\n  const [message,setMessage]=useState([]);\r\n  const [newMessage,setNewMessage]=useState(\"\");\r\n  const [chats,setChats]=useState();\r\n  const [sender,setSender]=useState();\r\n  const [reciever,setReciever]=useState();\r\n  const [socketConnected,setSocketConnected]=useState();\r\n  const [typing ,setTyping]=useState(false);\r\n  const chatId=props.chatId;\r\n  const userAccessToken=localStorage.getItem('userAccessToken');\r\n  const finItem=JSON.parse(userAccessToken);\r\n\r\n  const handleGetMessages=async (chatID)=>{\r\n    try{\r\n      const {data}=await axios.post(`${server}/getmessage`,{\r\n        chatID\r\n      });\r\n      if(data.success){\r\n        setMessage(data.messages);\r\n        socket.emit(\"join chat\",chatID);\r\n      }\r\n      else{\r\n  \r\n      }\r\n    }\r\n    catch(error){\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n\r\n  const sendMessage=async (event)=>{\r\n    if (newMessage&&chats) {\r\n      const chatID=chats._id;\r\n      socket.emit(\"stop typing\", chatID);\r\n      try {\r\n        setNewMessage(\"\");\r\n        const { data } = await axios.post(\r\n          `${server}/sendmessage`,\r\n          {\r\n            content: newMessage,\r\n            chatID,\r\n            finItem\r\n          }\r\n        );\r\n        socket.emit(\"new message\",data.message);\r\n        setMessage([...message, data.message]);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"setup\",props.userId);\r\n    socket.on(\"connected\", () => setSocketConnected(true));\r\n    socket.on(\"typing\", () => setTyping(true));\r\n    socket.on(\"stop typing\", () => setTyping(false));\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n\r\n  useEffect( () => {\r\n    socket.on(\"message recieved\", (newMessageRecieved) => {\r\n      if(chats){\r\n      const chatID=chats._id;\r\n      if ( chatID != newMessageRecieved.chat._id) {\r\n        if (!newMessageRecieved) {\r\n          \r\n        }\r\n      } else {\r\n        setMessage([...message, newMessageRecieved]);\r\n      }\r\n    }\r\n    });\r\n  \r\n  },[message]);\r\n\r\n\r\n\r\n  useEffect( async ()=> {\r\n    try{\r\n      const {data}= await  axios.post(`${server}/getchat`,{\r\n        chatId,finItem\r\n  });\r\n      if(data.success){\r\n        setChats(data.FullChat);\r\n        setSender(data.sender);\r\n        setReciever(data.reciever);\r\n        const chatID=data.FullChat._id;\r\n        handleGetMessages(chatID);\r\n       \r\n      }\r\n      else{\r\n        \r\n      }\r\n\r\n    }\r\n    catch(error){\r\n      console.log(error);\r\n    }\r\n  },[]);\r\n\r\n\r\n  const typingHandler=(e)=>{\r\n\r\n    setNewMessage(e.target.value);\r\n\r\n    if (!socketConnected) return;\r\n\r\n    if (!typing) {\r\n      console.log('typing');\r\n      setTyping(true);\r\n      socket.emit(\"typing\", chatId);\r\n    }\r\n    let lastTypingTime = new Date().getTime();\r\n    var timerLength = 3000;\r\n    setTimeout(() => {\r\n      var timeNow = new Date().getTime();\r\n      var timeDiff = timeNow - lastTypingTime;\r\n      if (timeDiff >= timerLength && typing) {\r\n        socket.emit(\"stop typing\", chatId);\r\n        setTyping(false);\r\n      }\r\n    }, timerLength);\r\n\r\n  }\r\n\r\n\r\n  const handlePrevMessage=(m)=>{\r\n    if(m){\r\n      const datetime=m.createdAt.split(\"T\");\r\n      const date=datetime[0].split(\"-\");\r\n      const time=datetime[1].split(\":\");\r\n      var hour=(Number(time[0])+5)%12;\r\n      if(Number(time[1])>=30){\r\n        hour=hour+1;\r\n      }\r\n      const minute=(Number(time[1])+30)%60;\r\n      var timeString='';\r\n      if(time[0]>12){\r\n          timeString=String(hour)+\":\";\r\n          if(minute<10){\r\n            timeString=timeString+\"0\"+String(minute)+\" pm\";\r\n          }\r\n          else{\r\n            timeString=timeString+String(minute)+\" pm\";\r\n          }\r\n      }\r\n      else{\r\n        timeString=String(hour)+\":\";\r\n        if(minute<10){\r\n          timeString=timeString+\"0\"+String(minute)+\" am\";\r\n        }\r\n        else{\r\n          timeString=timeString+String(minute)+\" am\";\r\n        }\r\n      }\r\n      \r\n      const t=String([time[1]]);\r\n      console.log(typeof(t));\r\n      return(<div>\r\n      {m.sender}and{props.userId}and\r\n        {m.content}and {timeString}\r\n      </div>)\r\n    }\r\n  }\r\n \r\n  return (<>{!sender?\"\":\r\n   <div className='chatting-body'>\r\n    {sender.name}and {reciever.name}\r\n\r\n    <div className='chat-p-message'>\r\n    {message.map(handlePrevMessage)}\r\n\r\n    </div>\r\n   \r\n    <div className='chat-input'>\r\n    \r\n    <input type='text' value={newMessage} onChange={typingHandler}/>\r\n    \r\n    \r\n  \r\n    <button type='button' onClick={sendMessage}>Send</button>\r\n    \r\n\r\n    </div>\r\n        \r\n    </div>\r\n   \r\n\r\n  }</>\r\n   \r\n  )\r\n}\r\n\r\nexport default Userchat;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}