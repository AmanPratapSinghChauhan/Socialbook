{"ast":null,"code":"import axios from 'axios';\nimport { server } from '../store';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: 'loginRequest'\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      withCredentials: true\n    };\n    const {\n      data\n    } = await axios.post(`${server}/login`, {\n      email,\n      password,\n      config\n    });\n    if (!data.status) {\n      dispatch({\n        type: 'loginFail',\n        payload: data.msg\n      });\n    } else {\n      dispatch({\n        type: 'loginSuccess',\n        payload: data\n      });\n      localStorage.setItem('userAccessToken', JSON.stringify(data.token));\n    }\n  } catch (error) {\n    dispatch({\n      type: 'loginFail',\n      payload: error.response.data.message\n    });\n  }\n};\nexport const register = formData => async dispatch => {\n  try {\n    dispatch({\n      type: 'registerRequest'\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      withCredentials: true\n    };\n    const {\n      data\n    } = await axios.post(`${server}/register`, {\n      name,\n      email,\n      password,\n      config\n    });\n    if (data.status) {\n      dispatch({\n        type: 'registerSuccess',\n        payload: data\n      });\n      localStorage.setItem('userAccessToken', JSON.stringify(data.token));\n    } else {\n      dispatch({\n        type: 'registerFail',\n        payload: data.msg\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: 'registerFail',\n      payload: error.response.data.message\n    });\n  }\n};\nexport const verify = otp => async dispatch => {\n  try {\n    dispatch({\n      type: 'verificationRequest'\n    });\n    const userAccessToken = localStorage.getItem('userAccessToken');\n    const finItem = JSON.parse(userAccessToken);\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      withCredentials: true\n    };\n    const {\n      data\n    } = await axios.post(`${server}/verify`, {\n      otp,\n      finItem,\n      config\n    });\n    if (!data.status) {\n      dispatch({\n        type: 'verificationFailure',\n        payload: data.msg\n      });\n    } else {\n      dispatch({\n        type: 'verificationSuccess',\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: 'verificationFailure',\n      payload: error.response.data.message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  try {\n    dispatch({\n      type: 'logoutRequest'\n    });\n    const {\n      data\n    } = await axios.get(`${server}/logout`);\n    if (data.status) {\n      dispatch({\n        type: 'logoutSuccess',\n        payload: data.msg\n      });\n      localStorage.removeItem('userAccessToken');\n    }\n  } catch (error) {\n    dispatch({\n      type: 'logoutFail',\n      payload: error.response.data.message\n    });\n  }\n};\nexport const loadUser = finItem => async dispatch => {\n  try {\n    dispatch({\n      type: 'loadUserRequest'\n    });\n    const {\n      data\n    } = await axios.post(`${server}/loaduser`, {\n      finItem\n    });\n    if (data.status) {\n      dispatch({\n        type: 'loadUserSuccess',\n        payload: data.user\n      });\n    } else {\n      dispatch({\n        type: 'loadUserFail',\n        payload: data.msg\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: 'loadUserFail',\n      payload: error.response.data.message\n    });\n  }\n};\nexport const forgetPassword = email => async dispatch => {\n  try {\n    dispatch({\n      type: \"forgetPasswordRequest\"\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      withCredentials: true\n    };\n    const {\n      data\n    } = await axios.post(`${server}/forgetpassword`, {\n      email\n    }, config);\n    if (data.status) {\n      dispatch({\n        type: \"forgetPasswordSuccess\",\n        payload: data.msg\n      });\n    } else {\n      dispatch({\n        type: \"forgetPasswordFail\",\n        payload: data.msg\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: \"forgetPasswordFail\",\n      payload: error.response.data.message\n    });\n  }\n};\nexport const resetPassword = (token, password) => async dispatch => {\n  try {\n    dispatch({\n      type: \"resetPasswordRequest\"\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      withCredentials: true\n    };\n    const {\n      data\n    } = await axios.put(`${server}/resetpassword/${token}`, {\n      password\n    }, config);\n    if (data.status) {\n      dispatch({\n        type: \"resetPasswordSuccess\",\n        payload: data.msg\n      });\n    } else {\n      dispatch({\n        type: \"resetPasswordFail\",\n        payload: data.msg\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: \"resetPasswordFail\",\n      payload: error.response.data.message\n    });\n  }\n};","map":{"version":3,"names":["axios","server","login","email","password","dispatch","type","config","headers","withCredentials","data","post","status","payload","msg","localStorage","setItem","JSON","stringify","token","error","response","message","register","formData","name","verify","otp","userAccessToken","getItem","finItem","parse","logout","get","removeItem","loadUser","user","forgetPassword","resetPassword","put"],"sources":["C:/Users/91863/OneDrive/Desktop/Socialbook/my-app/src/actions/UserActions.js"],"sourcesContent":["import axios from 'axios';\r\nimport { server } from '../store';\r\n\r\n \r\nexport const login =(email,password)=> async dispatch =>{\r\n    try{\r\n        dispatch({type:'loginRequest'});\r\n        const config = {\r\n            headers: {\r\n              \"Content-type\": \"application/json\",\r\n            },\r\n      \r\n            withCredentials: true,\r\n          };\r\n        const {data} =await axios.post(\r\n            `${server}/login`,\r\n            {email,password,config}\r\n        )\r\n       if(!data.status){\r\n        dispatch({type:'loginFail',payload:data.msg});\r\n       }\r\n       else{\r\n        dispatch({type:'loginSuccess',payload:data});\r\n        localStorage.setItem('userAccessToken',JSON.stringify(data.token));\r\n       }\r\n        \r\n\r\n    }\r\n    catch(error){\r\n        dispatch({type:'loginFail',payload:error.response.data.message});\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const register= (formData)=> async dispatch =>{\r\n    try{\r\n        dispatch({type:'registerRequest'});\r\n        const config = {\r\n            headers: {\r\n              \"Content-type\": \"application/json\",\r\n            },\r\n      \r\n            withCredentials: true,\r\n          };\r\n        const {data}=await axios.post(`${server}/register`,\r\n            {name,email,password,config},\r\n        )\r\n        if(data.status){\r\n            \r\n            dispatch({type:'registerSuccess',payload:data});\r\n            localStorage.setItem('userAccessToken',JSON.stringify(data.token));\r\n        }\r\n        else{\r\n           \r\n            dispatch({type:'registerFail',payload:data.msg});\r\n\r\n        }\r\n       \r\n    }\r\n    catch(error){\r\n        dispatch({type:'registerFail',payload:error.response.data.message})\r\n    }\r\n}\r\n\r\nexport const verify=(otp)=> async dispatch =>{\r\n    try {\r\n        dispatch ({type:'verificationRequest'});\r\n        const userAccessToken=localStorage.getItem('userAccessToken');\r\n        const finItem=JSON.parse(userAccessToken);\r\n        const config = {\r\n            headers: {\r\n              \"Content-type\": \"application/json\",\r\n            },\r\n      \r\n            withCredentials: true,\r\n          };\r\n        const {data}= await axios.post(`${server}/verify`,{\r\n            otp,finItem,config\r\n        });\r\n        if(!data.status){\r\n            dispatch({type:'verificationFailure',payload:data.msg});\r\n        }\r\n        else{\r\n            dispatch({type:'verificationSuccess',payload:data});\r\n        }\r\n        \r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:'verificationFailure',payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout=()=>async dispatch =>{\r\n    try{\r\n        dispatch({type:'logoutRequest'});\r\n        const {data}=await axios.get(`${server}/logout`);\r\n        if(data.status){\r\n            dispatch({type:'logoutSuccess',payload:data.msg});\r\n            localStorage.removeItem('userAccessToken');\r\n        }\r\n    }\r\n    catch(error){\r\n        dispatch({type:'logoutFail',payload:error.response.data.message});\r\n    }\r\n}\r\n\r\nexport const loadUser=(finItem)=>async dispatch=>{\r\n    try{\r\n       dispatch({type:'loadUserRequest'});\r\n\r\n       const {data}=await axios.post(`${server}/loaduser`,{finItem});\r\n       if(data.status){\r\n        dispatch({type:'loadUserSuccess',payload:data.user});\r\n       }\r\n       else{\r\n        dispatch({type:'loadUserFail',payload:data.msg});\r\n       }\r\n       \r\n    } \r\n    catch(error){\r\n        dispatch({type:'loadUserFail',payload:error.response.data.message});\r\n    }\r\n}\r\n\r\nexport const forgetPassword = (email) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: \"forgetPasswordRequest\" });\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n  \r\n        withCredentials: true,\r\n      };\r\n  \r\n      const { data } = await axios.post(\r\n        `${server}/forgetpassword`,\r\n        {\r\n          email,\r\n        },\r\n        config\r\n      );\r\n      if(data.status){\r\n        dispatch({ type: \"forgetPasswordSuccess\", payload: data.msg });\r\n      }\r\n      else{\r\n        dispatch({ type: \"forgetPasswordFail\", payload: data.msg });\r\n      }\r\n  \r\n      \r\n    } catch (error) {\r\n      dispatch({\r\n        type: \"forgetPasswordFail\",\r\n        payload: error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n  \r\n  export const resetPassword = (token, password) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: \"resetPasswordRequest\" });\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n  \r\n        withCredentials: true,\r\n      };\r\n  \r\n      const { data } = await axios.put(\r\n        `${server}/resetpassword/${token}`,\r\n        {\r\n          password,\r\n        },\r\n        config\r\n      );\r\n      if(data.status){\r\n        dispatch({ type: \"resetPasswordSuccess\", payload: data.msg });\r\n      }\r\n      else{\r\n        dispatch({ type: \"resetPasswordFail\", payload: data.msg });\r\n      }\r\n  \r\n      \r\n    } catch (error) {\r\n      dispatch({\r\n        type: \"resetPasswordFail\",\r\n        payload: error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n  \r\n  "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,UAAU;AAGjC,OAAO,MAAMC,KAAK,GAAEA,CAACC,KAAK,EAACC,QAAQ,KAAI,MAAMC,QAAQ,IAAG;EACpD,IAAG;IACCA,QAAQ,CAAC;MAACC,IAAI,EAAC;IAAc,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG;MACXC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MAEDC,eAAe,EAAE;IACnB,CAAC;IACH,MAAM;MAACC;IAAI,CAAC,GAAE,MAAMV,KAAK,CAACW,IAAI,CACzB,GAAEV,MAAO,QAAO,EACjB;MAACE,KAAK;MAACC,QAAQ;MAACG;IAAM,CAC1B,CAAC;IACF,IAAG,CAACG,IAAI,CAACE,MAAM,EAAC;MACfP,QAAQ,CAAC;QAACC,IAAI,EAAC,WAAW;QAACO,OAAO,EAACH,IAAI,CAACI;MAAG,CAAC,CAAC;IAC9C,CAAC,MACG;MACHT,QAAQ,CAAC;QAACC,IAAI,EAAC,cAAc;QAACO,OAAO,EAACH;MAAI,CAAC,CAAC;MAC5CK,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAACC,IAAI,CAACC,SAAS,CAACR,IAAI,CAACS,KAAK,CAAC,CAAC;IACnE;EAGH,CAAC,CACD,OAAMC,KAAK,EAAC;IACRf,QAAQ,CAAC;MAACC,IAAI,EAAC,WAAW;MAACO,OAAO,EAACO,KAAK,CAACC,QAAQ,CAACX,IAAI,CAACY;IAAO,CAAC,CAAC;EAEpE;AAGJ,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGC,QAAQ,IAAI,MAAMnB,QAAQ,IAAG;EACjD,IAAG;IACCA,QAAQ,CAAC;MAACC,IAAI,EAAC;IAAiB,CAAC,CAAC;IAClC,MAAMC,MAAM,GAAG;MACXC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MAEDC,eAAe,EAAE;IACnB,CAAC;IACH,MAAM;MAACC;IAAI,CAAC,GAAC,MAAMV,KAAK,CAACW,IAAI,CAAE,GAAEV,MAAO,WAAU,EAC9C;MAACwB,IAAI;MAACtB,KAAK;MAACC,QAAQ;MAACG;IAAM,CAC/B,CAAC;IACD,IAAGG,IAAI,CAACE,MAAM,EAAC;MAEXP,QAAQ,CAAC;QAACC,IAAI,EAAC,iBAAiB;QAACO,OAAO,EAACH;MAAI,CAAC,CAAC;MAC/CK,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAACC,IAAI,CAACC,SAAS,CAACR,IAAI,CAACS,KAAK,CAAC,CAAC;IACtE,CAAC,MACG;MAEAd,QAAQ,CAAC;QAACC,IAAI,EAAC,cAAc;QAACO,OAAO,EAACH,IAAI,CAACI;MAAG,CAAC,CAAC;IAEpD;EAEJ,CAAC,CACD,OAAMM,KAAK,EAAC;IACRf,QAAQ,CAAC;MAACC,IAAI,EAAC,cAAc;MAACO,OAAO,EAACO,KAAK,CAACC,QAAQ,CAACX,IAAI,CAACY;IAAO,CAAC,CAAC;EACvE;AACJ,CAAC;AAED,OAAO,MAAMI,MAAM,GAAEC,GAAG,IAAI,MAAMtB,QAAQ,IAAG;EACzC,IAAI;IACAA,QAAQ,CAAE;MAACC,IAAI,EAAC;IAAqB,CAAC,CAAC;IACvC,MAAMsB,eAAe,GAACb,YAAY,CAACc,OAAO,CAAC,iBAAiB,CAAC;IAC7D,MAAMC,OAAO,GAACb,IAAI,CAACc,KAAK,CAACH,eAAe,CAAC;IACzC,MAAMrB,MAAM,GAAG;MACXC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MAEDC,eAAe,EAAE;IACnB,CAAC;IACH,MAAM;MAACC;IAAI,CAAC,GAAE,MAAMV,KAAK,CAACW,IAAI,CAAE,GAAEV,MAAO,SAAQ,EAAC;MAC9C0B,GAAG;MAACG,OAAO;MAACvB;IAChB,CAAC,CAAC;IACF,IAAG,CAACG,IAAI,CAACE,MAAM,EAAC;MACZP,QAAQ,CAAC;QAACC,IAAI,EAAC,qBAAqB;QAACO,OAAO,EAACH,IAAI,CAACI;MAAG,CAAC,CAAC;IAC3D,CAAC,MACG;MACAT,QAAQ,CAAC;QAACC,IAAI,EAAC,qBAAqB;QAACO,OAAO,EAACH;MAAI,CAAC,CAAC;IACvD;EAEJ,CAAC,CACD,OAAMU,KAAK,EAAC;IACRf,QAAQ,CAAC;MACLC,IAAI,EAAC,qBAAqB;MAACO,OAAO,EAACO,KAAK,CAACC,QAAQ,CAACX,IAAI,CAACY;IAC3D,CAAC,CAAC;EACN;AACJ,CAAC;AAGD,OAAO,MAAMU,MAAM,GAACA,CAAA,KAAI,MAAM3B,QAAQ,IAAG;EACrC,IAAG;IACCA,QAAQ,CAAC;MAACC,IAAI,EAAC;IAAe,CAAC,CAAC;IAChC,MAAM;MAACI;IAAI,CAAC,GAAC,MAAMV,KAAK,CAACiC,GAAG,CAAE,GAAEhC,MAAO,SAAQ,CAAC;IAChD,IAAGS,IAAI,CAACE,MAAM,EAAC;MACXP,QAAQ,CAAC;QAACC,IAAI,EAAC,eAAe;QAACO,OAAO,EAACH,IAAI,CAACI;MAAG,CAAC,CAAC;MACjDC,YAAY,CAACmB,UAAU,CAAC,iBAAiB,CAAC;IAC9C;EACJ,CAAC,CACD,OAAMd,KAAK,EAAC;IACRf,QAAQ,CAAC;MAACC,IAAI,EAAC,YAAY;MAACO,OAAO,EAACO,KAAK,CAACC,QAAQ,CAACX,IAAI,CAACY;IAAO,CAAC,CAAC;EACrE;AACJ,CAAC;AAED,OAAO,MAAMa,QAAQ,GAAEL,OAAO,IAAG,MAAMzB,QAAQ,IAAE;EAC7C,IAAG;IACAA,QAAQ,CAAC;MAACC,IAAI,EAAC;IAAiB,CAAC,CAAC;IAElC,MAAM;MAACI;IAAI,CAAC,GAAC,MAAMV,KAAK,CAACW,IAAI,CAAE,GAAEV,MAAO,WAAU,EAAC;MAAC6B;IAAO,CAAC,CAAC;IAC7D,IAAGpB,IAAI,CAACE,MAAM,EAAC;MACdP,QAAQ,CAAC;QAACC,IAAI,EAAC,iBAAiB;QAACO,OAAO,EAACH,IAAI,CAAC0B;MAAI,CAAC,CAAC;IACrD,CAAC,MACG;MACH/B,QAAQ,CAAC;QAACC,IAAI,EAAC,cAAc;QAACO,OAAO,EAACH,IAAI,CAACI;MAAG,CAAC,CAAC;IACjD;EAEH,CAAC,CACD,OAAMM,KAAK,EAAC;IACRf,QAAQ,CAAC;MAACC,IAAI,EAAC,cAAc;MAACO,OAAO,EAACO,KAAK,CAACC,QAAQ,CAACX,IAAI,CAACY;IAAO,CAAC,CAAC;EACvE;AACJ,CAAC;AAED,OAAO,MAAMe,cAAc,GAAIlC,KAAK,IAAK,MAAOE,QAAQ,IAAK;EACzD,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAwB,CAAC,CAAC;IAE3C,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MAEDC,eAAe,EAAE;IACnB,CAAC;IAED,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMV,KAAK,CAACW,IAAI,CAC9B,GAAEV,MAAO,iBAAgB,EAC1B;MACEE;IACF,CAAC,EACDI,MACF,CAAC;IACD,IAAGG,IAAI,CAACE,MAAM,EAAC;MACbP,QAAQ,CAAC;QAAEC,IAAI,EAAE,uBAAuB;QAAEO,OAAO,EAAEH,IAAI,CAACI;MAAI,CAAC,CAAC;IAChE,CAAC,MACG;MACFT,QAAQ,CAAC;QAAEC,IAAI,EAAE,oBAAoB;QAAEO,OAAO,EAAEH,IAAI,CAACI;MAAI,CAAC,CAAC;IAC7D;EAGF,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdf,QAAQ,CAAC;MACPC,IAAI,EAAE,oBAAoB;MAC1BO,OAAO,EAAEO,KAAK,CAACC,QAAQ,CAACX,IAAI,CAACY;IAC/B,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMgB,aAAa,GAAGA,CAACnB,KAAK,EAAEf,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EACpE,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAuB,CAAC,CAAC;IAC1C,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MAEDC,eAAe,EAAE;IACnB,CAAC;IAED,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMV,KAAK,CAACuC,GAAG,CAC7B,GAAEtC,MAAO,kBAAiBkB,KAAM,EAAC,EAClC;MACEf;IACF,CAAC,EACDG,MACF,CAAC;IACD,IAAGG,IAAI,CAACE,MAAM,EAAC;MACbP,QAAQ,CAAC;QAAEC,IAAI,EAAE,sBAAsB;QAAEO,OAAO,EAAEH,IAAI,CAACI;MAAI,CAAC,CAAC;IAC/D,CAAC,MACG;MACFT,QAAQ,CAAC;QAAEC,IAAI,EAAE,mBAAmB;QAAEO,OAAO,EAAEH,IAAI,CAACI;MAAI,CAAC,CAAC;IAC5D;EAGF,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdf,QAAQ,CAAC;MACPC,IAAI,EAAE,mBAAmB;MACzBO,OAAO,EAAEO,KAAK,CAACC,QAAQ,CAACX,IAAI,CAACY;IAC/B,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}